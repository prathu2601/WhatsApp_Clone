{"ast":null,"code":"var _jsxFileName = \"D:\\\\PM\\\\Project\\\\WhatsApp Clone\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport './Chat.css';\nimport { Search } from '@material-ui/icons';\nimport { useParams } from 'react-router-dom';\nimport db from '../firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  var _messages, _messages$timestamp;\n\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const {\n    roomId\n  } = useParams();\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n    }\n\n    setSeed(Math.floor(Math.random() * 5000));\n    db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log(input);\n    db.collection('rooms').doc(roomId).collection('messages').add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/avataaars/Mouth=['smile']${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last seen \", \" \", new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toUTCString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message ${message.name === user.displayName && \"chat__reciver\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => {\n            setInput(e.target.value);\n          },\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"bQG+pnOGFpe9uodBnzII4fKB2V4=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/PM/Project/WhatsApp Clone/src/components/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","SearchIcon","AttachFileIcon","MoreVertIcon","InsertEmoticonIcon","MicIcon","Search","useParams","db","firebase","useStateValue","Chat","input","setInput","seed","setSeed","roomName","setRoomName","messages","setMessages","roomId","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","Math","floor","random","orderBy","docs","map","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport './Chat.css'\nimport { Search } from '@material-ui/icons';\nimport { useParams } from 'react-router-dom';\n\nimport db from '../firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const [roomName, setRoomName ] = useState(\"\");\n    const [messages, setMessages ] = useState([]);\n    const { roomId } = useParams();\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(()=>{\n        if(roomId){\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot=>(\n                setRoomName(snapshot.data().name)\n            ))\n        }\n        setSeed(Math.floor(Math.random() * 5000));\n\n        db\n            .collection('rooms')\n            .doc(roomId)\n            .collection('messages')\n            .orderBy('timestamp', 'asc')\n            .onSnapshot(snapshot=>(setMessages(snapshot.docs.map((doc) => doc.data()))\n        ))\n    },[roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log( input );\n\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput(\"\");\n    }\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/avataaars/Mouth=['smile']${seed}.svg`}/>\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}</p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchIcon/>\n                    </IconButton>\n\n                    <IconButton>\n                        <AttachFileIcon/>\n                    </IconButton>\n                    \n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <p className={`chat__message ${ message.name===user.displayName && \"chat__reciver\"}`}>\n                        <span className=\"chat__name\">{message.name }</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                    </p>\n                ))}\n            </div>\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form onSubmit={sendMessage} type=\"submit\">\n                    <input value={input} onChange={(e)=>{setInput(e.target.value)}} placeholder=\"Type a message\" type=\"text\"/>\n                    <button>Send</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}