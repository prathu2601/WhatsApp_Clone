{"ast":null,"code":"import _slicedToArray from\"D:\\\\PM\\\\Project\\\\WhatsApp Clone\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect}from'react';import{Avatar,IconButton}from'@material-ui/core';import SearchIcon from'@material-ui/icons/Search';import AttachFileIcon from'@material-ui/icons/AttachFile';import MoreVertIcon from'@material-ui/icons/MoreVert';import InsertEmoticonIcon from'@material-ui/icons/InsertEmoticon';import MicIcon from'@material-ui/icons/Mic';import'./Chat.css';import{Search}from'@material-ui/icons';import{useParams}from'react-router-dom';import db from'../firebase';import firebase from'firebase';import{useStateValue}from'./StateProvider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(){var _messages,_messages$timestamp;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),seed=_useState4[0],setSeed=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),roomName=_useState6[0],setRoomName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useParams=useParams(),roomId=_useParams.roomId;var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),user=_useStateValue2[0].user,dispatch=_useStateValue2[1];useEffect(function(){if(roomId){db.collection('rooms').doc(roomId).onSnapshot(function(snapshot){return setRoomName(snapshot.data().name);});}setSeed(Math.floor(Math.random()*5000));db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot(function(snapshot){return setMessages(snapshot.docs.map(function(doc){return doc.data();}));});},[roomId]);var sendMessage=function sendMessage(e){e.preventDefault();console.log(input);db.collection('rooms').doc(roomId).collection('messages').add({message:input,name:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()});setInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat__header\",children:[/*#__PURE__*/_jsx(Avatar,{src:\"https://avatars.dicebear.com/api/avataaars/Mouth=['smile']\".concat(seed,\".svg\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__headerInfo\",children:[/*#__PURE__*/_jsx(\"h3\",{children:roomName}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Last seen \",\" \",new Date((_messages=messages[messages.length-1])===null||_messages===void 0?void 0:(_messages$timestamp=_messages.timestamp)===null||_messages$timestamp===void 0?void 0:_messages$timestamp.toDate()).toUTCString()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__headerRight\",children:[/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(SearchIcon,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(AttachFileIcon,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(MoreVertIcon,{})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat__body\",children:messages.map(function(message){var _message$timestamp;return/*#__PURE__*/_jsxs(\"p\",{className:\"chat__message \".concat(message.name===user.displayName&&\"chat__reciver\"),children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat__name\",children:message.name}),message.message,/*#__PURE__*/_jsx(\"span\",{className:\"chat__timestamp\",children:new Date((_message$timestamp=message.timestamp)===null||_message$timestamp===void 0?void 0:_message$timestamp.toDate()).toUTCString()})]});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__footer\",children:[/*#__PURE__*/_jsx(InsertEmoticonIcon,{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,type:\"submit\",children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:function onChange(e){setInput(e.target.value);},placeholder:\"Type a message\",type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})]}),/*#__PURE__*/_jsx(MicIcon,{})]})]});}export default Chat;","map":{"version":3,"sources":["D:/PM/Project/WhatsApp Clone/src/components/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","SearchIcon","AttachFileIcon","MoreVertIcon","InsertEmoticonIcon","MicIcon","Search","useParams","db","firebase","useStateValue","Chat","input","setInput","seed","setSeed","roomName","setRoomName","messages","setMessages","roomId","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","Math","floor","random","orderBy","docs","map","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport './Chat.css'\nimport { Search } from '@material-ui/icons';\nimport { useParams } from 'react-router-dom';\n\nimport db from '../firebase';\nimport firebase from 'firebase';\nimport { useStateValue } from './StateProvider';\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const [roomName, setRoomName ] = useState(\"\");\n    const [messages, setMessages ] = useState([]);\n    const { roomId } = useParams();\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(()=>{\n        if(roomId){\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot=>(\n                setRoomName(snapshot.data().name)\n            ))\n        }\n        setSeed(Math.floor(Math.random() * 5000));\n\n        db\n            .collection('rooms')\n            .doc(roomId)\n            .collection('messages')\n            .orderBy('timestamp', 'asc')\n            .onSnapshot(snapshot=>(setMessages(snapshot.docs.map((doc) => doc.data()))\n        ))\n    },[roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log( input );\n\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput(\"\");\n    }\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/avataaars/Mouth=['smile']${seed}.svg`}/>\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}</p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchIcon/>\n                    </IconButton>\n\n                    <IconButton>\n                        <AttachFileIcon/>\n                    </IconButton>\n                    \n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <p className={`chat__message ${ message.name===user.displayName && \"chat__reciver\"}`}>\n                        <span className=\"chat__name\">{message.name }</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                    </p>\n                ))}\n            </div>\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form onSubmit={sendMessage} type=\"submit\">\n                    <input value={input} onChange={(e)=>{setInput(e.target.value)}} placeholder=\"Type a message\" type=\"text\"/>\n                    <button>Send</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}